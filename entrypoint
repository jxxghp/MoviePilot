#!/bin/bash

# 使用 `envsubst` 将模板文件中的 ${NGINX_PORT} 替换为实际的环境变量值
envsubst '${NGINX_PORT}${PORT}' < /etc/nginx/nginx.template.conf > /etc/nginx/nginx.conf
# 自动更新
if [ "${MOVIEPILOT_AUTO_UPDATE}" = "true" ]; then
    cd /
    /usr/local/bin/mp_update
    cd /app
else
    echo "程序自动升级已关闭，如需自动升级请在创建容器时设置环境变量：MOVIEPILOT_AUTO_UPDATE=true"
fi
# 更改 moviepilot userid 和 groupid
groupmod -o -g ${PGID} moviepilot
usermod -o -u ${PUID} moviepilot
# 更改文件权限
chown -R moviepilot:moviepilot \
    ${HOME} \
    /app \
    /public \
    /config \
    /var/lib/nginx \
    /var/log/nginx
chown moviepilot:moviepilot /etc/hosts /tmp
# 下载浏览器内核
if [ "${USE_PLAYWRIGHT}" = "true" ]; then
    echo "配置仿真环境中..."
    if [ ! -f /playwright_depends_install ]; then
        cp /etc/apt/sources.list /etc/apt/sources.list.bak
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free" > /etc/apt/sources.list
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free" >> /etc/apt/sources.list
        echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free" >> /etc/apt/sources.list
        echo "deb https://security.debian.org/debian-security bullseye-security main contrib non-free" >> /etc/apt/sources.list
        apt-get update -y
        playwright install-deps chromium
        touch /playwright_depends_install
    fi
    gosu moviepilot:moviepilot playwright install chromium
else
    echo "未开启仿真环境，如需开启仿真环境请在创建容器时设置环境变量：USE_PLAYWRIGHT=true"
fi
# 启动前端nginx服务
nginx
# 启动haproxy
if [ -S "/var/run/docker.sock" ]; then
    haproxy -f /app/haproxy.cfg
fi
# 设置后端服务权限掩码
umask ${UMASK}
# 启动后端服务
exec dumb-init gosu moviepilot:moviepilot python3 app/main.py
