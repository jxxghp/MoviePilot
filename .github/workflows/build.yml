name: MoviePilot Builder v2
on:
  workflow_dispatch:
  push:
    branches:
      - v2
    paths:
      - '.github/workflows/build.yml'
      - 'Dockerfile'
      - 'version.py'
      - 'requirements.in'

jobs:
  Docker-build:
    runs-on: ubuntu-latest
    name: Build Docker Image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Release version
        id: release_version
        run: |
          app_version=$(cat version.py |sed -ne "s/APP_VERSION\s=\s'v\(.*\)'/\1/gp")
          echo "app_version=$app_version" >> $GITHUB_ENV

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/moviepilot-v2
          tags: |
            type=raw,value=${{ env.app_version }}
            type=raw,value=latest

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: |
            linux/amd64
            linux/arm64/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}-docker
          cache-to: type=gha, scope=${{ github.workflow }}-docker

      - name: Delete Release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: ${{ env.app_version }}
          delete_release: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.app_version }}
          name: ${{ env.app_version }}
          draft: false
          prerelease: false
          make_latest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
